# OpenStarLab Event Modeling, Apache-2.0 license
# UEID data (with openstarlab-preprocessing package) and LEM_action model


# Training parameters
train_path: /path/to/train.csv                                                            # Path to the train set
valid_path: /path/to/valid.csv                                                            # Path to the valid set
save_path: /path/to/save                                                                  # Path to save the training results 
test: True                                                                                # Test the model training 
num_epoch: 50
print_freq: 1
early_stop_patience: 5
dataloader_num_worker: 4
device: None                                                                              #when None, device = torch.device('cuda' if torch.cuda.is_available() else 'cpu') 

# Input features
basic_features: ['action', 'delta_T', 'start_x','start_y'] 
other_features: ['team','home_team','success','seconds','deltaX','deltaY','distance','dist2goal','angle2goal']
use_other_features: True
num_actions: 9 
seq_len: 3

# Model Hyperparameters (use all lists for optuna or all value for specified hyperparameters)
optuna: False
optuna_n_trials: 100

learning_rate: 0.01
eps: 1e-16
batch_size: 256

hidden_layers: 1
hidden_size: [256] #each value represent the hidden_size of corresponding the hidden_layer
activation: 'sigmoid'

